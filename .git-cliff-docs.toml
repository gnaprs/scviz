# .git-cliff-docs.toml
# Clean changelog configuration for docs

[changelog]
header = """
All notable changes to this project are documented here.
"""

body = """
{% if releases is defined and releases | length > 0 %}
{# --- Multi-release mode (e.g. -a) --- #}
{% for release in releases %}
### {{ release.version | trim_start_matches(pat="v") }}{% if release.timestamp %} – {{ release.timestamp | date(format="%Y-%m-%d") }}{% endif %}

{% for group, commits in release.commits | group_by(attribute="group") %}
#### {{ group | upper_first }}
{% for commit in commits %}
- {{ commit.message | split(pat="\\n") | first | upper_first | trim }} ({{ commit.id | truncate(length=7) }})
{% endfor %}

{% endfor %}
---
{% endfor %}
{% else %}
{# --- Single-release modes (e.g. --latest, --current, --unreleased) --- #}
### {{ version | default(value="Unreleased") | trim_start_matches(pat="v") }}{% if timestamp %} – {{ timestamp | date(format="%Y-%m-%d") }}{% endif %}

{% for group, commits in commits | group_by(attribute="group") %}
#### {{ group | upper_first }}
{% for commit in commits %}
- {{ commit.message | split(pat="\\n") | first | upper_first | trim }} ({{ commit.id | truncate(length=7) }})
{% endfor %}

{% endfor %}
{% endif %}
"""



footer = """
<!-- generated by git-cliff -->
"""
trim = true

[git]
tag_pattern = "v[0-9]*"
conventional_commits = true
filter_unconventional = false
filter_commits = false
sort_commits = "oldest"
topo_order = false

commit_parsers = [
  # skip noise
  { message = "(?i)merge (pull request|branch|development)", skip = true },
  { message = "(?i)update to v[0-9]", skip = true },

  # main groups (no emojis)
  { message = "(?i)^(add|added|implement|introduce|create|upload)", group = "Added" },
  { message = "(?i)^(fix|bug|bugfix|resolve|patch)", group = "Fixed" },
  { message = "(?i)^(update|change|modify|adjust|tweak|improve|enhance|overhaul|rewrite|refactor|edit|editing)", group = "Changed" },
  { message = "(?i)^(test|pytest|unit)", group = "Tests" },
  { message = "(?i)^(doc|readme|mkdocs|comment)", group = "Documentation" },
  { message = "(?i)^(ci|workflow|action|github|auto)", group = "CI" },

  # fallback
  { message = ".*", group = "Other" }
]
